#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Sep 27, 2018 08:22:06 PM CEST  platform: Linux

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import mainwin_ui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    mainwin_ui_support.set_Tk_var()
    top = Git_Review (root)
    mainwin_ui_support.init(root, top)
    root.mainloop()

w = None
def create_Git_Review(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    mainwin_ui_support.set_Tk_var()
    top = Git_Review (w)
    mainwin_ui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Git_Review():
    global w
    w.destroy()
    w = None


class Git_Review:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("597x444+418+380")
        top.title("Git Review")
        top.configure(highlightcolor="black")



        self.txtCommitIds = Text(top)
        self.txtCommitIds.place(relx=0.017, rely=0.282, relheight=0.234
                , relwidth=0.961)
        self.txtCommitIds.configure(background="white")
        self.txtCommitIds.configure(font="TkTextFont")
        self.txtCommitIds.configure(selectbackground="#c4c4c4")
        self.txtCommitIds.configure(undo="1")
        self.txtCommitIds.configure(width=574)
        self.txtCommitIds.configure(wrap=WORD)

        self.txtFilters = Text(top)
        self.txtFilters.place(relx=0.017, rely=0.586, relheight=0.324
                , relwidth=0.961)
        self.txtFilters.configure(background="white")
        self.txtFilters.configure(font="TkTextFont")
        self.txtFilters.configure(selectbackground="#c4c4c4")
        self.txtFilters.configure(undo="1")
        self.txtFilters.configure(width=574)
        self.txtFilters.configure(wrap=WORD)

        self.Label2 = Label(top)
        self.Label2.place(relx=0.017, rely=0.225, height=21, width=63)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Commits''')

        self.Label3 = Label(top)
        self.Label3.place(relx=0.017, rely=0.529, height=21, width=55)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''Exclude''')

        self.Button1 = Button(top)
        self.Button1.place(relx=0.821, rely=0.923, height=24, width=88)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(command=mainwin_ui_support.generateDiffDocument)
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Generate''')

        self.comboBaseBranch = ttk.Combobox(top)
        self.comboBaseBranch.place(relx=0.184, rely=0.158, relheight=0.047
                , relwidth=0.28)
        self.value_list = ['master','develop',]
        self.comboBaseBranch.configure(values=self.value_list)
        self.comboBaseBranch.configure(textvariable=mainwin_ui_support.comboBaseBranch)
        self.comboBaseBranch.configure(takefocus="")

        self.comboToBranch = ttk.Combobox(top)
        self.comboToBranch.place(relx=0.57, rely=0.158, relheight=0.047
                , relwidth=0.28)
        self.value_list = ['master','develop','feat_xxx',]
        self.comboToBranch.configure(values=self.value_list)
        self.comboToBranch.configure(textvariable=mainwin_ui_support.comboToBranch)
        self.comboToBranch.configure(takefocus="")

        self.TButton1 = ttk.Button(top)
        self.TButton1.place(relx=0.871, rely=0.158, height=28, width=62)
        self.TButton1.configure(command=mainwin_ui_support.addBranchDiffFromCommonAncestor)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Add''')

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.017, rely=0.158, height=19, width=92)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Base branch:''')

        self.TLabel2 = ttk.Label(top)
        self.TLabel2.place(relx=0.469, rely=0.158, height=19, width=53)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief=FLAT)
        self.TLabel2.configure(text='''Branch:''')

        self.TLabel3 = ttk.Label(top)
        self.TLabel3.place(relx=0.017, rely=0.023, height=19, width=92)
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief=FLAT)
        self.TLabel3.configure(text='''Name:''')

        self.edName = ttk.Entry(top)
        self.edName.place(relx=0.184, rely=0.023, relheight=0.047
                , relwidth=0.794)
        self.edName.configure(textvariable=mainwin_ui_support.edName)
        self.edName.configure(takefocus="")
        self.edName.configure(cursor="xterm")






if __name__ == '__main__':
    vp_start_gui()



